AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS Patronus Micro Services
  InventoryNotification:
    Type: String
    Description: Inventory notification

Resources:
  Topic:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
        - Protocol: sqs
          Endpoint: !Ref InventoryNotification

  ProductResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: product.handler
      Runtime: nodejs4.3
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /product/{SKU}
            Method: get
        PostEvent:
          Type: Api
          Properties:
            Path: /product
            Method: post
        PutEvent:
          Type: Api
          Properties:
            Path: /product
            Method: put

  OrderResource:
      Type: AWS::Serverless::Function
      Properties:
        Handler: order.handler
        Runtime: nodejs4.3
        Role:
          Fn::ImportValue:
            !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
        Events:
          GetEvent:
            Type: Api
            Properties:
              Path: /order/{ID}
              Method: get
          PostEvent:
            Type: Api
            Properties:
              Path: /order
              Method: post
          PutEvent:
            Type: Api
            Properties:
              Path: /order
              Method: put

  CartResource:
        Type: AWS::Serverless::Function
        Properties:
          Handler: cart.handler
          Runtime: nodejs4.3
          Role:
            Fn::ImportValue:
              !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
          Events:
            GetEvent:
              Type: Api
              Properties:
                Path: /cart/{ID}
                Method: get
            PostEvent:
              Type: Api
              Properties:
                Path: /cart
                Method: post
            PutEvent:
              Type: Api
              Properties:
                Path: /cart
                Method: put

  InventoryCreateResource:
      Type: AWS::Serverless::Function
      Properties:
        Handler: inventory.loadSku
        Runtime: nodejs4.3
        Role:
          Fn::ImportValue:
            !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]

  InventoryPromiseResource:
      Type: AWS::Serverless::Function
      Properties:
        Handler: inventory.allocate
        Runtime: nodejs4.3
        Role:
          Fn::ImportValue:
            !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]



  InventoryResource:
         Type: AWS::Serverless::Function

         Properties:
           Handler: inventory.handler
           Runtime: nodejs4.3
           Role:
             Fn::ImportValue:
               !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
           Events:
             GetEvent:
               Type: Api
               Properties:
                 Path: /inventory/{CountryCode}/{SKU}
                 Method: get
                 RestApiId: atpCheck
           Environment:
            Variables:
              SNS_TOPIC_ARN: !Ref Topic
